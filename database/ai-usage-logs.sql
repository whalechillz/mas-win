-- AI API 사용량 추적을 위한 테이블
CREATE TABLE IF NOT EXISTS public.ai_usage_logs (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  api_endpoint TEXT NOT NULL,
  model TEXT NOT NULL,
  input_tokens INTEGER DEFAULT 0,
  output_tokens INTEGER DEFAULT 0,
  total_tokens INTEGER DEFAULT 0,
  cost DECIMAL(10, 6) DEFAULT 0,
  improvement_type TEXT,
  content_type TEXT,
  user_agent TEXT,
  ip_address INET,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 인덱스 추가
CREATE INDEX IF NOT EXISTS idx_ai_usage_logs_endpoint ON public.ai_usage_logs (api_endpoint);
CREATE INDEX IF NOT EXISTS idx_ai_usage_logs_model ON public.ai_usage_logs (model);
CREATE INDEX IF NOT EXISTS idx_ai_usage_logs_created_at ON public.ai_usage_logs (created_at DESC);
CREATE INDEX IF NOT EXISTS idx_ai_usage_logs_cost ON public.ai_usage_logs (cost DESC);

-- RLS 정책 설정
ALTER TABLE public.ai_usage_logs ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable read access for all users" ON public.ai_usage_logs
  FOR SELECT USING (TRUE);

CREATE POLICY "Enable insert access for service role" ON public.ai_usage_logs
  FOR INSERT WITH CHECK (TRUE);

-- 사용량 통계를 위한 뷰 생성
CREATE OR REPLACE VIEW public.ai_usage_stats AS
SELECT 
  api_endpoint,
  model,
  COUNT(*) as total_requests,
  SUM(total_tokens) as total_tokens,
  SUM(cost) as total_cost,
  AVG(cost) as avg_cost_per_request,
  DATE_TRUNC('day', created_at) as usage_date
FROM public.ai_usage_logs
GROUP BY api_endpoint, model, DATE_TRUNC('day', created_at)
ORDER BY usage_date DESC;

-- 월별 사용량 통계 뷰
CREATE OR REPLACE VIEW public.ai_usage_monthly_stats AS
SELECT 
  api_endpoint,
  model,
  COUNT(*) as total_requests,
  SUM(total_tokens) as total_tokens,
  SUM(cost) as total_cost,
  AVG(cost) as avg_cost_per_request,
  DATE_TRUNC('month', created_at) as usage_month
FROM public.ai_usage_logs
GROUP BY api_endpoint, model, DATE_TRUNC('month', created_at)
ORDER BY usage_month DESC;
